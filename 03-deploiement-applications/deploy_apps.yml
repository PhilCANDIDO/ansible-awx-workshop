---
# Playbook principal pour d√©ployer la stack compl√®te (Web + BDD)
#
# Usage :
#   ansible-playbook -i inventory/hosts.ini deploy_apps.yml
#
# Pour d√©ployer sur une seule VM :
#   ansible-playbook -i inventory/hosts.ini deploy_apps.yml -e "single_host=vm-test"

- name: D√©ploiement de la stack applicative compl√®te
  hosts: all
  gather_facts: true
  become: true

  pre_tasks:
    - name: Afficher les informations de d√©ploiement
      ansible.builtin.debug:
        msg: |
          üöÄ D√©marrage du d√©ploiement de la stack applicative

          Environnement : {{ app_environment | default('development') }}
          Application : {{ app_name | default('workshop-app') }}

          Serveurs cibl√©s :
          - Webservers : {{ groups['webservers'] | default([]) | join(', ') }}
          - Databases : {{ groups['databases'] | default([]) | join(', ') }}
      run_once: true
      tags:
        - always

    - name: Mettre √† jour le cache des packages
      ansible.builtin.package:
        update_cache: true
      when: ansible_os_family == "Debian"
      tags:
        - always

# D√©ploiement de la base de donn√©es en premier
- name: D√©ployer MySQL sur les serveurs de base de donn√©es
  hosts: "{{ single_host | default('databases') }}"
  gather_facts: false
  become: true

  roles:
    - database

  post_tasks:
    - name: Afficher le statut du d√©ploiement MySQL
      ansible.builtin.debug:
        msg: |
          ‚úÖ MySQL d√©ploy√© avec succ√®s sur {{ ansible_hostname }}

          Base de donn√©es : {{ mysql_database }}
          Port : {{ mysql_port }}
      tags:
        - mysql

# D√©ploiement du serveur web
- name: D√©ployer Nginx sur les serveurs web
  hosts: "{{ single_host | default('webservers') }}"
  gather_facts: false
  become: true

  roles:
    - webserver

  post_tasks:
    - name: Afficher le statut du d√©ploiement Nginx
      ansible.builtin.debug:
        msg: |
          ‚úÖ Nginx d√©ploy√© avec succ√®s sur {{ ansible_hostname }}

          URL HTTP : http://{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}:{{ nginx_port }}
          URL HTTPS : https://{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}:{{ nginx_ssl_port }}
      tags:
        - nginx

# Tests de validation finaux
- name: Tests de validation de la stack
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Tester la connectivit√© aux serveurs web
      ansible.builtin.uri:
        url: "http://{{ hostvars[item]['ansible_default_ipv4']['address'] | default(hostvars[item]['ansible_all_ipv4_addresses'][0]) }}"
        status_code: 200
        timeout: 10
      loop: "{{ groups['webservers'] | default([]) }}"
      when: groups['webservers'] is defined
      delegate_to: localhost
      ignore_errors: true
      tags:
        - test

    - name: R√©sum√© du d√©ploiement
      ansible.builtin.debug:
        msg: |

          ========================================
          üéâ D√âPLOIEMENT TERMIN√â AVEC SUCC√àS ! üéâ
          ========================================

          Stack d√©ploy√©e :
          ----------------
          ‚úÖ Serveurs Web (Nginx) : {{ groups['webservers'] | default([]) | length }}
          ‚úÖ Bases de donn√©es (MySQL) : {{ groups['databases'] | default([]) | length }}

          Prochaines √©tapes :
          -------------------
          1. Tester l'acc√®s aux serveurs web
          2. V√©rifier la connectivit√© MySQL
          3. Configurer les applications

          Documentation : README.md
          ========================================
      run_once: true
      tags:
        - always